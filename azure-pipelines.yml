trigger:
- none

stages:
  - stage: Build
    jobs: 
      - job: BuildApp
        pool:
          vmImage: 'windows-latest'

        variables:
          solution: '**/*.sln'
          buildPlatform: 'Any CPU'
          buildConfiguration: 'Release'

        steps:
        - task: NuGetToolInstaller@1
        
        - task: NuGetCommand@2
          inputs:
            command: 'restore'
            restoreSolution: '$(solution)'
            feedsToUse: 'config'
            nugetConfigPath: 'Pipelines/NuGet.config'
        
        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'
          displayName: 'Install Node.js'

        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'ci'
          displayName: 'npm install'
          workingDir: '$(Build.SourcesDirectory)/Scripts/react'
        
        - script: |
            npm run build
          displayName: 'npm build'
          workingDirectory: '$(Build.SourcesDirectory)/KlpCrm.Filenet.Web.ReactApplication'

        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'PipelineBuildArtifact-$(Build.BuildId)'
            publishLocation: 'Container'
  
  - stage: DeployDev
    variables:
      - template: 'webapp.parameters.dev.yml'
    jobs:
      - deployment:
        pool:
          vmImage: 'windows-latest'
        environment: 'Dev'
        strategy:
          runOnce:
            deploy:
              steps:

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'CRM Azure Sandbox'
                    appType: 'webApp'
                    WebAppName: '$(appName)'
                    packageForLinux: '$(Pipeline.Workspace)/PipelineBuildArtifact-$(Build.BuildId)/WebApp.zip'